{"ast":null,"code":"const englishRiddles = [[\"Guess The Word\", \"maple\"], [\"Guess the color\", \"Green\"], [\"Guess the car\", \"mitsubishi\"], [\"Guess the fruit\", \"watermelon\"], [\"Guess the problem\", \"low power\"]];\nconst hebrewRiddles = [[\"שריפה משני תווים\", \"מדורה\"], [\"\", \"נצחון מוחלט\"]];\nexport function getRandomEnglishRiddle() {\n  const randomIndex = Math.floor(Math.random() * englishRiddles.length);\n  const [definition, solution] = englishRiddles[randomIndex];\n  return {\n    definition: definition,\n    solution: solution.toUpperCase().split(\"\")\n  };\n}\nexport function getRandomHebrewRiddle() {\n  const randomIndex = Math.floor(Math.random() * hebrewRiddles.length);\n  let [definition, solution] = hebrewRiddles[randomIndex];\n  solution = solution.split(\"\").reverse();\n  console.log(\"solution is\", solution);\n  return {\n    definition: definition,\n    solution: solution\n  };\n}","map":{"version":3,"names":["englishRiddles","hebrewRiddles","getRandomEnglishRiddle","randomIndex","Math","floor","random","length","definition","solution","toUpperCase","split","getRandomHebrewRiddle","reverse","console","log"],"sources":["/Users/amirdafnai/Desktop/react-app/my-app/src/riddlesStack.js"],"sourcesContent":["const englishRiddles = [\n  [\"Guess The Word\", \"maple\"],\n  [\"Guess the color\", \"Green\"],\n  [\"Guess the car\", \"mitsubishi\"],\n  [\"Guess the fruit\", \"watermelon\"],\n  [\"Guess the problem\", \"low power\"],\n];\n\nconst hebrewRiddles = [[\"שריפה משני תווים\", \"מדורה\"], [\"\", \"נצחון מוחלט\"]];\n\nexport function getRandomEnglishRiddle() {\n  const randomIndex = Math.floor(Math.random() * englishRiddles.length);\n  const [definition, solution] = englishRiddles[randomIndex];\n  return { definition: definition, solution: solution.toUpperCase().split(\"\") };\n}\nexport function getRandomHebrewRiddle() {\n  const randomIndex = Math.floor(Math.random() * hebrewRiddles.length);\n  let [definition, solution] = hebrewRiddles[randomIndex];\n  solution = solution.split(\"\").reverse();\n  console.log(\"solution is\", solution);\n  return { definition: definition, solution: solution };\n}\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,CACrB,CAAC,gBAAgB,EAAE,OAAO,CAAC,EAC3B,CAAC,iBAAiB,EAAE,OAAO,CAAC,EAC5B,CAAC,eAAe,EAAE,YAAY,CAAC,EAC/B,CAAC,iBAAiB,EAAE,YAAY,CAAC,EACjC,CAAC,mBAAmB,EAAE,WAAW,CAAC,CACnC;AAED,MAAMC,aAAa,GAAG,CAAC,CAAC,kBAAkB,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;AAE1E,OAAO,SAASC,sBAAsBA,CAAA,EAAG;EACvC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,cAAc,CAACO,MAAM,CAAC;EACrE,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGT,cAAc,CAACG,WAAW,CAAC;EAC1D,OAAO;IAAEK,UAAU,EAAEA,UAAU;IAAEC,QAAQ,EAAEA,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE;EAAE,CAAC;AAC/E;AACA,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EACtC,MAAMT,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,aAAa,CAACM,MAAM,CAAC;EACpE,IAAI,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGR,aAAa,CAACE,WAAW,CAAC;EACvDM,QAAQ,GAAGA,QAAQ,CAACE,KAAK,CAAC,EAAE,CAAC,CAACE,OAAO,CAAC,CAAC;EACvCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,QAAQ,CAAC;EACpC,OAAO;IAAED,UAAU,EAAEA,UAAU;IAAEC,QAAQ,EAAEA;EAAS,CAAC;AACvD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}