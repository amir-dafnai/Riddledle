{"ast":null,"code":"var _jsxFileName = \"/Users/amirdafnai/Desktop/react-app/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  style\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    style: style,\n    children: [value, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nfunction InvisibleSquare() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invisibleSquare\",\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_c2 = InvisibleSquare;\nfunction getNextSquare(currAnswer, solution) {\n  // console.log(solution);\n  // console.log(currAnswer);\n\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (currAnswer[i] === \"\" && solution[i] !== \" \" || i === solution.length - 1) return i;\n  }\n}\nfunction getPrevSquare(currAnswer, solution) {\n  let nextSquare = getNextSquare(currAnswer, solution);\n  if (nextSquare === solution.length - 1 && currAnswer[nextSquare] !== '' || nextSquare === 0) return nextSquare;\n  nextSquare--;\n  if (solution[nextSquare] === ' ') return nextSquare - 1;\n  return nextSquare;\n}\nfunction Riddle({\n  solution,\n  currAnswer,\n  styles,\n  handleKeyDown\n}) {\n  _s();\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (solution[i] !== \" \") {\n      squares.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: currAnswer[i],\n        style: styles[i],\n        children: \" \"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n    } else squares.push(/*#__PURE__*/_jsxDEV(InvisibleSquare, {\n      children: \" \"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this));\n  }\n  return squares;\n}\n_s(Riddle, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = Riddle;\nexport default function App() {\n  _s2();\n  const solution = \"hello man\".toUpperCase();\n  const [currAnswer, setCurrAnswer] = useState(Array(solution.length).fill(\"\"));\n  let [styles, setStyle] = useState(Array(solution.length).fill({\n    'backgroundColor': \"white\"\n  }));\n  function onEnterClicked(solution, currAnswer) {\n    let newStyles = styles.slice();\n    let solutionChars = solution.split('');\n    for (let i = 0; i < solution.length; i++) {\n      if (solution[i] === ' ') continue;\n      const currChar = currAnswer[i];\n      if (currChar === solution[i]) {\n        newStyles[i] = {\n          backgroundColor: 'green'\n        };\n      } else if (solutionChars.includes(currChar)) {\n        newStyles[i] = {\n          backgroundColor: 'orange'\n        };\n      } else newStyles[i] = {\n        backgroundColor: 'gray'\n      };\n      solutionChars.splice(solutionChars.indexOf(currChar), 1);\n    }\n    setStyle(newStyles);\n  }\n  function setNewAnswer(currSquare, key) {\n    // console.log('key is ' + key)\n    // console.log('currentSquare = ' + currSquare)\n    let newans = currAnswer.slice();\n    newans[currSquare] = key;\n    setCurrAnswer(newans);\n    // console.log(currAnswer)\n    // console.log(newans)\n  }\n  function handleKeyDown(event) {\n    if (event.key === 'Backspace') setNewAnswer(getPrevSquare(currAnswer, solution), '');else if (\"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1) setNewAnswer(getNextSquare(currAnswer, solution), event.key.toUpperCase());else if (event.key === 'Enter' && currAnswer[solution.length - 1] !== '') onEnterClicked(solution, currAnswer);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" THiS IS THE DEFENITION \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Riddle, {\n      solution: solution.toUpperCase(),\n      currAnswer: currAnswer,\n      styles: styles,\n      handleKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(App, \"n8w56h78xYXnpTJYPi6x/PcTiME=\");\n_c4 = App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"InvisibleSquare\");\n$RefreshReg$(_c3, \"Riddle\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","InvisibleSquare","_c2","getNextSquare","currAnswer","solution","i","length","getPrevSquare","nextSquare","Riddle","styles","handleKeyDown","_s","window","addEventListener","removeEventListener","squares","push","_c3","App","_s2","toUpperCase","setCurrAnswer","Array","fill","setStyle","onEnterClicked","newStyles","slice","solutionChars","split","currChar","backgroundColor","includes","splice","indexOf","setNewAnswer","currSquare","key","newans","event","toLowerCase","_c4","$RefreshReg$"],"sources":["/Users/amirdafnai/Desktop/react-app/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Square({ value , style }) {\n  return <div className=\"square\"  style={style} >{value} </div>;\n}\n\n\nfunction InvisibleSquare() {\n  return <div className=\"invisibleSquare\"> </div>;\n}\n\nfunction getNextSquare(currAnswer, solution) {\n  // console.log(solution);\n  // console.log(currAnswer);\n\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (\n      (currAnswer[i] === \"\" && solution[i] !== \" \") ||\n      i === solution.length - 1\n    )\n      return i;\n  }\n}\n\nfunction getPrevSquare(currAnswer , solution){\n  let nextSquare = getNextSquare(currAnswer ,solution)\n  if ((nextSquare === solution.length-1 && currAnswer[nextSquare] !== '') || nextSquare === 0)\n    return nextSquare\n  nextSquare--\n  if(solution[nextSquare] === ' ')\n    return nextSquare-1\n  return nextSquare\n}\n\nfunction Riddle({ solution, currAnswer, styles,  handleKeyDown }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n\n    if (solution[i] !== \" \"){\n      squares.push(\n        <Square key={i} value={currAnswer[i]}  style={styles[i]} >\n          {\" \"}\n        </Square>\n      );\n      \n    }\n    else squares.push(<InvisibleSquare key={i}> </InvisibleSquare>);\n  }\n  return squares;\n}\n\n\n\nexport default function App() {\n  const solution = \"hello man\".toUpperCase();\n  const [currAnswer, setCurrAnswer] = useState(Array(solution.length).fill(\"\"));\n  let [styles, setStyle] = useState(Array(solution.length).fill({'backgroundColor' : \"white\"}))\n\n\n  function onEnterClicked(solution , currAnswer){\n    let newStyles = styles.slice()\n    let solutionChars = solution.split('')\n    for (let i = 0; i < solution.length; i++) {\n      if (solution[i] === ' ')\n        continue\n      const currChar = currAnswer[i]\n      if (currChar === solution[i]){\n        newStyles[i] = {backgroundColor:  'green'}\n      }\n      else if (solutionChars.includes(currChar)){\n        newStyles[i] = {backgroundColor:  'orange'}\n      }\n      else \n        newStyles[i] = {backgroundColor:  'gray'}\n      \n      solutionChars.splice(solutionChars.indexOf(currChar), 1)\n\n        \n    }\n    setStyle(newStyles)\n  \n  }\n  \n\n  function setNewAnswer(currSquare , key){\n    // console.log('key is ' + key)\n    // console.log('currentSquare = ' + currSquare)\n    let newans = currAnswer.slice();\n    newans[currSquare] = key;\n    setCurrAnswer(newans);\n    // console.log(currAnswer)\n    // console.log(newans)\n  \n  }\n\n\n  function handleKeyDown(event) {\n    if (event.key === 'Backspace')\n       setNewAnswer(getPrevSquare(currAnswer, solution), '')\n  \n    else if (\"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1) \n      setNewAnswer(getNextSquare(currAnswer, solution), event.key.toUpperCase())\n    else if (event.key === 'Enter' && currAnswer[solution.length -1] !== '')\n      onEnterClicked(solution , currAnswer)\n  }\n  \n  return (\n    <>\n      <div> THiS IS THE DEFENITION </div>\n      <br></br>\n      <Riddle\n        solution={solution.toUpperCase()}\n        currAnswer={currAnswer}\n        styles= {styles}\n        handleKeyDown={handleKeyDown}\n      />\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}