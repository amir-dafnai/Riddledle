{"ast":null,"code":"var _jsxFileName = \"/Users/amirdafnai/Desktop/react-app/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getColors } from \"./appUtils\";\nimport { getEmptyAnswers, getDefaultStyles, arraysAreEqual } from \"./appUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANG = 'HEB';\nfunction Square({\n  value,\n  style\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    style: style,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction InvisibleSquare() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invisibleSquare\",\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n_c2 = InvisibleSquare;\nfunction Squares({\n  currAnswer,\n  styles,\n  handleKeyDown\n}) {\n  _s();\n  useEffect(() => {\n    if (handleKeyDown == null) return;\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (currAnswer[i] !== \" \") {\n      squares.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: currAnswer[i],\n        style: styles[i],\n        children: \" \"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this));\n    } else squares.push(/*#__PURE__*/_jsxDEV(InvisibleSquare, {\n      children: \" \"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this));\n  }\n  return squares;\n}\n_s(Squares, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = Squares;\nfunction Riddle({\n  numberOfGuesses,\n  answers,\n  allStyles,\n  handleKeyDown,\n  currGuess\n}) {\n  const riddles = [];\n  for (let i = 0; i < numberOfGuesses; i++) {\n    riddles.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-container\",\n      children: /*#__PURE__*/_jsxDEV(Squares, {\n        currAnswer: answers[i],\n        styles: allStyles[i],\n        handleKeyDown: currGuess === i ? handleKeyDown : null\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this));\n  }\n  return riddles;\n}\n_c4 = Riddle;\nfunction NextRiddleButton({\n  handleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: \"Next Riddle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_c5 = NextRiddleButton;\nfunction GameWon({\n  handleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You Got It!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextRiddleButton, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c6 = GameWon;\nfunction GameLost({\n  solution,\n  handleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Too bad... The solution was \", solution]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NextRiddleButton, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c7 = GameLost;\nfunction Game({\n  riddle,\n  setRiddle\n}) {\n  _s2();\n  const solution = riddle.solution;\n  const numberOfGuesses = 3;\n  const [answers, setAnswers] = useState(getEmptyAnswers(solution, numberOfGuesses));\n  const [allStyles, setAllStyles] = useState(getDefaultStyles(solution, numberOfGuesses));\n  const [guesses, setGuesses] = useState([]);\n  const currGuess = guesses.length;\n  const currAnswer = answers[currGuess];\n  const gameStatus = arraysAreEqual(solution, answers[currGuess - 1]) ? \"win\" : currGuess === numberOfGuesses ? \"lose\" : \"playing\";\n  function reset() {\n    const newRiddle = getRiddle();\n    setAnswers(getEmptyAnswers(newRiddle.solution, numberOfGuesses));\n    setAllStyles(getDefaultStyles(newRiddle.solution, numberOfGuesses));\n    setGuesses([]);\n    setRiddle(newRiddle);\n  }\n  function onEnterClicked(solution, currAnswer) {\n    let newStyles = allStyles[currGuess].slice();\n    const colors = getColors(solution, currAnswer);\n    for (let i = 0; i < solution.length; i++) newStyles[i] = {\n      backgroundColor: colors[i]\n    };\n    let newAllStyles = allStyles.slice();\n    newAllStyles[currGuess] = newStyles;\n    setAllStyles(newAllStyles);\n    let newGuesses = guesses.slice();\n    newGuesses.push(currAnswer);\n    setGuesses(newGuesses);\n  }\n  function setNewAnswer(currSquare, key) {\n    let newAnswers = answers.slice();\n    currAnswer[currSquare] = key;\n    newAnswers[currGuess] = currAnswer;\n    setAnswers(newAnswers);\n  }\n  function handleKeyDown(event) {\n    if (event.key === \"Backspace\") setNewAnswer(getPrevSquare(currAnswer, solution), \"\");else if (LANG === 'ENG' && \"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1) setNewAnswer(getNextSquare(currAnswer), event.key.toUpperCase());else if (LANG === 'HEB' && \"אבגדהוזחטיכלמנסעפצקרשתךםןףץ\".indexOf(event.key) !== -1) setNewAnswer(getNextSquare(currAnswer), event.key);else if (event.key === \"Enter\" && currAnswer[solution.length - 1] !== \"\") onEnterClicked(solution, currAnswer);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"riddle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", riddle.definition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Riddle, {\n        numberOfGuesses: numberOfGuesses,\n        answers: answers,\n        allStyles: allStyles,\n        handleKeyDown: handleKeyDown,\n        currGuess: currGuess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), gameStatus === 'win' && /*#__PURE__*/_jsxDEV(GameWon, {\n        handleClick: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 34\n      }, this), gameStatus === 'lose' && /*#__PURE__*/_jsxDEV(GameLost, {\n        solution: solution,\n        handleClick: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s2(Game, \"QrAFaAqdnp2fxmgk5LflPY0V08k=\");\n_c8 = Game;\nexport default function App() {\n  _s3();\n  const [riddle, setRiddle] = useState(getRiddle());\n  return /*#__PURE__*/_jsxDEV(Game, {\n    riddle: riddle,\n    setRiddle: setRiddle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 10\n  }, this);\n}\n_s3(App, \"LitG2UFT8fi7MAuQQt+8ORSlRBE=\");\n_c9 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"InvisibleSquare\");\n$RefreshReg$(_c3, \"Squares\");\n$RefreshReg$(_c4, \"Riddle\");\n$RefreshReg$(_c5, \"NextRiddleButton\");\n$RefreshReg$(_c6, \"GameWon\");\n$RefreshReg$(_c7, \"GameLost\");\n$RefreshReg$(_c8, \"Game\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"names":["useEffect","useState","getColors","getEmptyAnswers","getDefaultStyles","arraysAreEqual","jsxDEV","_jsxDEV","Fragment","_Fragment","LANG","Square","value","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","InvisibleSquare","_c2","Squares","currAnswer","styles","handleKeyDown","_s","window","addEventListener","removeEventListener","squares","i","length","push","_c3","Riddle","numberOfGuesses","answers","allStyles","currGuess","riddles","_c4","NextRiddleButton","handleClick","onClick","_c5","GameWon","_c6","GameLost","solution","_c7","Game","riddle","setRiddle","_s2","setAnswers","setAllStyles","guesses","setGuesses","gameStatus","reset","newRiddle","getRiddle","onEnterClicked","newStyles","slice","colors","backgroundColor","newAllStyles","newGuesses","setNewAnswer","currSquare","key","newAnswers","event","getPrevSquare","indexOf","toLowerCase","getNextSquare","toUpperCase","definition","_c8","App","_s3","_c9","$RefreshReg$"],"sources":["/Users/amirdafnai/Desktop/react-app/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getColors } from \"./appUtils\";\nimport { getEmptyAnswers, getDefaultStyles, arraysAreEqual } from \"./appUtils\";\n\n\nconst LANG = 'HEB'\n\n\nfunction Square({ value, style }) {\n  return (\n    <div className=\"square\" style={style}>\n      {value}\n    </div>\n  );\n}\n\nfunction InvisibleSquare() {\n  return <div className=\"invisibleSquare\"> </div>;\n}\n\nfunction Squares({ currAnswer, styles, handleKeyDown }) {\n  useEffect(() => {\n    if (handleKeyDown == null) return;\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (currAnswer[i] !== \" \") {\n      squares.push(\n        <Square key={i} value={currAnswer[i]} style={styles[i]}>\n          {\" \"}\n        </Square>\n      );\n    } else squares.push(<InvisibleSquare key={i}> </InvisibleSquare>);\n  }\n  return squares;\n}\n\nfunction Riddle({\n  numberOfGuesses,\n  answers,\n  allStyles,\n  handleKeyDown,\n  currGuess,\n}) {\n  const riddles = [];\n  for (let i = 0; i < numberOfGuesses; i++) {\n    riddles.push(\n      <div key={i} className=\"word-container\">\n        <Squares\n          key={i}\n          currAnswer={answers[i]}\n          styles={allStyles[i]}\n          handleKeyDown={currGuess === i ? handleKeyDown : null}\n        />\n      </div>\n    );\n  }\n  return riddles;\n}\n\nfunction NextRiddleButton({handleClick}) {\n  return <button onClick={handleClick}>Next Riddle</button>\n}\n\nfunction GameWon({handleClick}) {\n  return (\n    <>\n      <h1>You Got It!</h1>\n      <NextRiddleButton handleClick={handleClick} />\n    </>\n  );\n}\nfunction GameLost({ solution, handleClick }) {\n  return(\n  <>\n    \n    <h1>Too bad... The solution was {solution}</h1>\n    <NextRiddleButton handleClick={handleClick} />\n  </>\n  )\n}\n\n\n\nfunction Game({ riddle, setRiddle }) {\n  const solution = riddle.solution\n  const numberOfGuesses = 3;\n  const [answers, setAnswers] = useState(\n    getEmptyAnswers(solution, numberOfGuesses)\n  );\n  const [allStyles, setAllStyles] = useState(\n    getDefaultStyles(solution, numberOfGuesses)\n  );\n  const [guesses, setGuesses] = useState([]);\n  const currGuess = guesses.length;\n  const currAnswer = answers[currGuess];\n\n  \n\n  const gameStatus = arraysAreEqual(solution, answers[currGuess - 1])\n    ? \"win\"\n    : currGuess === numberOfGuesses\n    ? \"lose\"\n    : \"playing\";\n\n  function reset() {\n    const newRiddle = getRiddle()\n    setAnswers(getEmptyAnswers(newRiddle.solution, numberOfGuesses));\n    setAllStyles(getDefaultStyles(newRiddle.solution, numberOfGuesses));\n    setGuesses([]);\n    setRiddle(newRiddle);\n  }\n\n  function onEnterClicked(solution, currAnswer) {\n    let newStyles = allStyles[currGuess].slice();\n    const colors = getColors(solution, currAnswer);\n    for (let i = 0; i < solution.length; i++)\n      newStyles[i] = { backgroundColor: colors[i] };\n    let newAllStyles = allStyles.slice();\n    newAllStyles[currGuess] = newStyles;\n    setAllStyles(newAllStyles);\n    let newGuesses = guesses.slice();\n    newGuesses.push(currAnswer);\n    setGuesses(newGuesses);\n  }\n\n  function setNewAnswer(currSquare, key) {\n    let newAnswers = answers.slice();\n    currAnswer[currSquare] = key;\n    newAnswers[currGuess] = currAnswer;\n    setAnswers(newAnswers);\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === \"Backspace\")\n      setNewAnswer(getPrevSquare(currAnswer, solution), \"\");\n    else if(LANG === 'ENG' &&\n      \"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1\n    )\n      setNewAnswer(getNextSquare(currAnswer), event.key.toUpperCase());\n    else if(LANG === 'HEB' &&\n      \"אבגדהוזחטיכלמנסעפצקרשתךםןףץ\".indexOf(event.key) !== -1\n    )\n      setNewAnswer(getNextSquare(currAnswer), event.key);\n    else if (event.key === \"Enter\" && currAnswer[solution.length - 1] !== \"\")\n      onEnterClicked(solution, currAnswer);\n  }\n\n  return (\n    <>\n      <div className=\"riddle-container\">\n        <h1> {riddle.definition}</h1>\n        <Riddle\n          numberOfGuesses={numberOfGuesses}\n          answers={answers}\n          allStyles={allStyles}\n          handleKeyDown={handleKeyDown}\n          currGuess={currGuess}\n        />\n\n        {gameStatus === 'win' && <GameWon handleClick={reset}/>}\n        {gameStatus === 'lose' && <GameLost solution={solution}  handleClick={reset}/>}\n        \n      </div>\n    </>\n  );\n}\n\nexport default function App() {\n  const [riddle, setRiddle] = useState(getRiddle());\n  return <Game riddle={riddle} setRiddle={setRiddle} />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}