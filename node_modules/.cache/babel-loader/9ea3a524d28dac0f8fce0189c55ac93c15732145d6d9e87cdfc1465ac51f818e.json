{"ast":null,"code":"var _jsxFileName = \"/Users/amirdafnai/Desktop/react-app/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  style\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    style: style,\n    children: [value, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction InvisibleSquare() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invisibleSquare\",\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n_c2 = InvisibleSquare;\nfunction getNextSquare(currAnswer, solution) {\n  // console.log(solution);\n  // console.log(currAnswer);\n\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (currAnswer[i] === \"\" && solution[i] !== \" \" || i === solution.length - 1) return i;\n  }\n}\nfunction getPrevSquare(currAnswer, solution) {\n  let nextSquare = getNextSquare(currAnswer, solution);\n  if (nextSquare === solution.length - 1 && currAnswer[nextSquare] !== \"\" || nextSquare === 0) return nextSquare;\n  nextSquare--;\n  if (solution[nextSquare] === \" \") return nextSquare - 1;\n  return nextSquare;\n}\nfunction Riddle({\n  solution,\n  currAnswer,\n  styles,\n  handleKeyDown\n}) {\n  _s();\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (solution[i] !== \" \") {\n      squares.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: currAnswer[i],\n        style: styles[i],\n        children: \" \"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this));\n    } else squares.push(/*#__PURE__*/_jsxDEV(InvisibleSquare, {\n      children: \" \"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this));\n  }\n  return squares;\n}\n_s(Riddle, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = Riddle;\nfunction getEmptyAnswers(solution, numberOfGuesses) {\n  let answers = [];\n  for (let i = 0; i < numberOfGuesses; i++) {\n    let answer = [];\n    for (let j = 0; j < solution.length; j++) {\n      if (solution[j] === \" \") answer.push(\" \");else answer.push(\"\");\n    }\n    answers.push(answer);\n  }\n  return answers;\n}\nfunction getDefaultStyles(solution, nGuesses) {\n  const singleGuessStyles = Array(solution.length).fill({\n    backgroundColor: \"white\"\n  });\n  const ans = Array(nGuesses).fill(singleGuessStyles);\n  return ans;\n}\nfunction arraysAreEqual(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every((element, index) => element === arr2[index]);\n}\nfunction getColors(solution, currAnswer) {\n  let colors = Array(solution.length).fill(\"gray\");\n  let solutionChars = solution.slice();\n  for (let i = 0; i < solution.length; i++) {\n    if (solution[i] === \" \") continue;\n    const currChar = currAnswer[i];\n    const index = solutionChars.indexOf(currChar);\n    if (currChar === solution[i]) {\n      colors[i] = \"green\";\n      solutionChars.splice(index, 1);\n    }\n  }\n  for (let i = 0; i < solution.length; i++) {\n    if (solution[i] === \" \") continue;\n    const currChar = currAnswer[i];\n    const index = solutionChars.indexOf(currChar);\n    if (index !== -1 && colors[i] === \"gray\") {\n      solutionChars.splice(index, 1);\n      colors[i] = \"orange\";\n    }\n  }\n  return colors;\n}\nfunction getRiddles(numberOfGuesses, solutions, allStyles, handleKeyDown) {\n  const Riddles = [];\n  for (let i = 0; i < numberOfGuesses; i++) {\n    Riddles.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-container\",\n      children: [getRiddles(numberOfGuesses), /*#__PURE__*/_jsxDEV(Riddle, {\n        solution: solutions[i],\n        currAnswer: solutions[i],\n        styles: allStyles[i],\n        handleKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this));\n  }\n}\nexport default function App() {\n  _s2();\n  const solution = \"hello man\".toUpperCase().split(\"\");\n  const numberOfGuesses = 3;\n  const [answers, setAnswers] = useState(getEmptyAnswers(solution, numberOfGuesses));\n  let [allStyles, setAllStyles] = useState(getDefaultStyles(solution, numberOfGuesses));\n  const [guesses, setGuesses] = useState([]);\n  const currGuess = guesses.length;\n  const currAnswer = answers[currGuess];\n  const gameStatus = arraysAreEqual(solution, currAnswer) ? \"win\" : currGuess > numberOfGuesses ? \"lose\" : \"playing\";\n  function onEnterClicked(solution, currAnswer) {\n    let newStyles = allStyles[currGuess].slice();\n    const colors = getColors(solution, currAnswer);\n    for (let i = 0; i < solution.length; i++) newStyles[i] = {\n      backgroundColor: colors[i]\n    };\n    let newAllStyles = allStyles.slice();\n    newAllStyles[currGuess] = newStyles;\n    setAllStyles(newAllStyles);\n    let newGuesses = guesses.slice();\n    newGuesses.push(currAnswer);\n    setGuesses(newGuesses);\n  }\n  function setNewAnswer(currSquare, key) {\n    // console.log('key is ' + key)\n    // console.log('currentSquare = ' + currSquare)\n    let newAnswers = answers.slice();\n    currAnswer[currSquare] = key;\n    newAnswers[currGuess] = currAnswer;\n    setAnswers(newAnswers);\n    // console.log(currAnswer)\n    // console.log(newans)\n  }\n  function handleKeyDown(event) {\n    if (event.key === \"Backspace\") setNewAnswer(getPrevSquare(currAnswer, solution), \"\");else if (\"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1) setNewAnswer(getNextSquare(currAnswer, solution), event.key.toUpperCase());else if (event.key === \"Enter\" && currAnswer[solution.length - 1] !== \"\") onEnterClicked(solution, currAnswer);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" THIS IS THE DEFENITION \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-container\",\n      children: [getRiddles(numberOfGuesses), /*#__PURE__*/_jsxDEV(Riddle, {\n        solution: solution,\n        currAnswer: answers[0],\n        styles: allStyles[0],\n        handleKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-container\",\n      children: /*#__PURE__*/_jsxDEV(Riddle, {\n        solution: solution,\n        currAnswer: answers[1],\n        styles: allStyles[1],\n        handleKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(App, \"QrAFaAqdnp2fxmgk5LflPY0V08k=\");\n_c4 = App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"InvisibleSquare\");\n$RefreshReg$(_c3, \"Riddle\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","InvisibleSquare","_c2","getNextSquare","currAnswer","solution","i","length","getPrevSquare","nextSquare","Riddle","styles","handleKeyDown","_s","window","addEventListener","removeEventListener","squares","push","_c3","getEmptyAnswers","numberOfGuesses","answers","answer","j","getDefaultStyles","nGuesses","singleGuessStyles","Array","fill","backgroundColor","ans","arraysAreEqual","arr1","arr2","every","element","index","getColors","colors","solutionChars","slice","currChar","indexOf","splice","getRiddles","solutions","allStyles","Riddles","App","_s2","toUpperCase","split","setAnswers","setAllStyles","guesses","setGuesses","currGuess","gameStatus","onEnterClicked","newStyles","newAllStyles","newGuesses","setNewAnswer","currSquare","key","newAnswers","event","toLowerCase","_c4","$RefreshReg$"],"sources":["/Users/amirdafnai/Desktop/react-app/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Square({ value, style }) {\n  return (\n    <div className=\"square\" style={style}>\n      {value}{\" \"}\n    </div>\n  );\n}\n\nfunction InvisibleSquare() {\n  return <div className=\"invisibleSquare\"> </div>;\n}\n\nfunction getNextSquare(currAnswer, solution) {\n  // console.log(solution);\n  // console.log(currAnswer);\n\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (\n      (currAnswer[i] === \"\" && solution[i] !== \" \") ||\n      i === solution.length - 1\n    )\n      return i;\n  }\n}\n\nfunction getPrevSquare(currAnswer, solution) {\n  let nextSquare = getNextSquare(currAnswer, solution);\n  if (\n    (nextSquare === solution.length - 1 && currAnswer[nextSquare] !== \"\") ||\n    nextSquare === 0\n  )\n    return nextSquare;\n  nextSquare--;\n  if (solution[nextSquare] === \" \") return nextSquare - 1;\n  return nextSquare;\n}\n\nfunction Riddle({ solution, currAnswer, styles, handleKeyDown }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (solution[i] !== \" \") {\n      squares.push(\n        <Square key={i} value={currAnswer[i]} style={styles[i]}>\n          {\" \"}\n        </Square>\n      );\n    } else squares.push(<InvisibleSquare key={i}> </InvisibleSquare>);\n  }\n  return squares;\n}\n\nfunction getEmptyAnswers(solution, numberOfGuesses) {\n  let answers = [];\n  for (let i = 0; i < numberOfGuesses; i++) {\n    let answer = [];\n    for (let j = 0; j < solution.length; j++) {\n      if (solution[j] === \" \") answer.push(\" \");\n      else answer.push(\"\");\n    }\n    answers.push(answer);\n  }\n  return answers;\n}\n\nfunction getDefaultStyles(solution, nGuesses) {\n  const singleGuessStyles = Array(solution.length).fill({\n    backgroundColor: \"white\",\n  });\n  const ans = Array(nGuesses).fill(singleGuessStyles);\n  return ans;\n}\n\nfunction arraysAreEqual(arr1, arr2) {\n  return (\n    arr1.length === arr2.length &&\n    arr1.every((element, index) => element === arr2[index])\n  );\n}\n\nfunction getColors(solution, currAnswer) {\n  let colors = Array(solution.length).fill(\"gray\");\n  let solutionChars = solution.slice();\n  for (let i = 0; i < solution.length; i++) {\n    if (solution[i] === \" \") continue;\n    const currChar = currAnswer[i];\n    const index = solutionChars.indexOf(currChar);\n    if (currChar === solution[i]) {\n      colors[i] = \"green\";\n      solutionChars.splice(index, 1);\n    }\n  }\n\n  for (let i = 0; i < solution.length; i++) {\n    if (solution[i] === \" \") continue;\n    const currChar = currAnswer[i];\n    const index = solutionChars.indexOf(currChar);\n    if (index !== -1 && colors[i] === \"gray\") {\n      solutionChars.splice(index, 1);\n      colors[i] = \"orange\";\n    }\n  }\n  return colors;\n}\n\nfunction getRiddles(numberOfGuesses, solutions, allStyles, handleKeyDown) {\n  const Riddles = [];\n  for (let i = 0; i < numberOfGuesses; i++) {\n    Riddles.push(\n      <div className=\"word-container\">\n        {getRiddles(numberOfGuesses)}\n\n        <Riddle\n          solution={solutions[i]}\n          currAnswer={solutions[i]}\n          styles={allStyles[i]}\n          handleKeyDown={handleKeyDown}\n        />\n      </div>\n    );\n  }\n  \n}\n\nexport default function App() {\n  const solution = \"hello man\".toUpperCase().split(\"\");\n  const numberOfGuesses = 3;\n  const [answers, setAnswers] = useState(\n    getEmptyAnswers(solution, numberOfGuesses)\n  );\n  let [allStyles, setAllStyles] = useState(\n    getDefaultStyles(solution, numberOfGuesses)\n  );\n  const [guesses, setGuesses] = useState([]);\n  const currGuess = guesses.length;\n  const currAnswer = answers[currGuess];\n  const gameStatus = arraysAreEqual(solution, currAnswer)\n    ? \"win\"\n    : currGuess > numberOfGuesses\n    ? \"lose\"\n    : \"playing\";\n\n  function onEnterClicked(solution, currAnswer) {\n    let newStyles = allStyles[currGuess].slice();\n    const colors = getColors(solution, currAnswer);\n    for (let i = 0; i < solution.length; i++)\n      newStyles[i] = { backgroundColor: colors[i] };\n    let newAllStyles = allStyles.slice();\n    newAllStyles[currGuess] = newStyles;\n    setAllStyles(newAllStyles);\n    let newGuesses = guesses.slice();\n    newGuesses.push(currAnswer);\n    setGuesses(newGuesses);\n  }\n\n  function setNewAnswer(currSquare, key) {\n    // console.log('key is ' + key)\n    // console.log('currentSquare = ' + currSquare)\n    let newAnswers = answers.slice();\n    currAnswer[currSquare] = key;\n    newAnswers[currGuess] = currAnswer;\n    setAnswers(newAnswers);\n    // console.log(currAnswer)\n    // console.log(newans)\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === \"Backspace\")\n      setNewAnswer(getPrevSquare(currAnswer, solution), \"\");\n    else if (\n      \"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1\n    )\n      setNewAnswer(\n        getNextSquare(currAnswer, solution),\n        event.key.toUpperCase()\n      );\n    else if (event.key === \"Enter\" && currAnswer[solution.length - 1] !== \"\")\n      onEnterClicked(solution, currAnswer);\n  }\n\n  return (\n    <>\n      <h1> THIS IS THE DEFENITION </h1>\n      <div className=\"word-container\">\n        {getRiddles(numberOfGuesses)}\n\n        <Riddle\n          solution={solution}\n          currAnswer={answers[0]}\n          styles={allStyles[0]}\n          handleKeyDown={handleKeyDown}\n        />\n      </div>\n      <div className=\"word-container\">\n        <Riddle\n          solution={solution}\n          currAnswer={answers[1]}\n          styles={allStyles[1]}\n          handleKeyDown={handleKeyDown}\n        />\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}