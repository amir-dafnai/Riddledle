{"ast":null,"code":"var _jsxFileName = \"/Users/amirdafnai/Desktop/react-app/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  style\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    style: style,\n    children: [value, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nfunction InvisibleSquare() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invisibleSquare\",\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_c2 = InvisibleSquare;\nfunction getNextSquare(currAnswer, solution) {\n  // console.log(solution);\n  // console.log(currAnswer);\n\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (currAnswer[i] === \"\" && solution[i] !== \" \" || i === solution.length - 1) return i;\n  }\n}\nfunction getPrevSquare(currAnswer, solution) {\n  let nextSquare = getNextSquare(currAnswer, solution);\n  if (nextSquare === solution.length - 1 && currAnswer[nextSquare] !== '' || nextSquare === 0) return nextSquare;\n  nextSquare--;\n  if (solution[nextSquare] === ' ') return nextSquare - 1;\n  return nextSquare;\n}\nfunction Riddle({\n  solution,\n  currAnswer,\n  styles,\n  handleKeyDown\n}) {\n  _s();\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (solution[i] !== \" \") {\n      squares.push(/*#__PURE__*/_jsxDEV(Square, {\n        value: currAnswer[i],\n        style: styles[i],\n        children: \" \"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n    } else squares.push(/*#__PURE__*/_jsxDEV(InvisibleSquare, {\n      children: \" \"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this));\n  }\n  return squares;\n}\n_s(Riddle, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = Riddle;\nfunction getEmptyAnswers(solution, numberOfGuesses) {\n  let answers = [];\n  for (let i = 0; i < numberOfGuesses; i++) {\n    let answer = [];\n    for (let j = 0; j < solution.length; j++) {\n      if (solution[j] === ' ') answer.push(' ');else answer.push('');\n    }\n    answers.push(answer);\n  }\n  return answers;\n}\nfunction getDefaultStyles(solution, nGuesses) {\n  const singleGuessStyles = Array(solution.length).fill({\n    'backgroundColor': \"white\"\n  });\n  const ans = Array(nGuesses).fill(singleGuessStyles);\n  return ans;\n}\nfunction arraysAreEqual(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every((element, index) => element === arr2[index]);\n}\nfunction getNewGameStatus(currentAnswer, solution) {\n  if (arraysAreEqual(currentAnswer, solution)) return 'win';\n}\nexport default function App() {\n  _s2();\n  const solution = \"hello man\".toUpperCase().split('');\n  const numberOfGuesses = 3;\n  const [answers, setAnswers] = useState(getEmptyAnswers(solution, numberOfGuesses));\n  let [allStyles, setAllStyles] = useState(getDefaultStyles(solution));\n  const [Guesses, setGuesses] = useState([]);\n  const currGuess = Guesses.length;\n  const currAnswer = answers[currGuess];\n  const styles = allStyles[currGuess];\n  const [gameSatatus, setGamestatus] = useState('playing');\n  function onEnterClicked(solution, currAnswer) {\n    let newStyles = allStyles[currGuess].slice();\n    let solutionChars = solution.slice();\n    let colors = Array(solution.length).fill('gray');\n    for (let i = 0; i < solution.length; i++) {\n      if (solution[i] === ' ') continue;\n      const currChar = currAnswer[i];\n      const index = solutionChars.indexOf(currChar);\n      if (currChar === solution[i]) {\n        colors[i] = 'green';\n        solutionChars.splice(index, 1);\n      }\n    }\n    for (let i = 0; i < solution.length; i++) {\n      if (solution[i] === ' ') continue;\n      const currChar = currAnswer[i];\n      const index = solutionChars.indexOf(currChar);\n      if (index !== -1 && colors[i] === 'gray') {\n        solutionChars.splice(index, 1);\n        colors[i] = 'orange';\n      }\n      for (let i = 0; i < solution.length; i++) {\n        newStyles[i] = {\n          backgroundColor: colors[i]\n        };\n      }\n      let newAllStyles = allStyles.slice();\n      newAllStyles[currGuess] = newStyles;\n      setAllStyles(newAllStyles);\n    }\n  }\n  function setNewAnswer(currSquare, key) {\n    // console.log('key is ' + key)\n    // console.log('currentSquare = ' + currSquare)\n    let newAnswers = answers.slice();\n    currAnswer[currSquare] = key;\n    newAnswers[currGuess] = currAnswer;\n    setAnswers(newAnswers);\n    // console.log(currAnswer)\n    // console.log(newans)\n  }\n  function handleKeyDown(event) {\n    if (event.key === 'Backspace') setNewAnswer(getPrevSquare(currAnswer, solution), '');else if (\"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1) setNewAnswer(getNextSquare(currAnswer, solution), event.key.toUpperCase());else if (event.key === 'Enter' && currAnswer[solution.length - 1] !== '') onEnterClicked(solution, currAnswer);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" THIS IS THE DEFENITION \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-container\",\n      children: /*#__PURE__*/_jsxDEV(Riddle, {\n        solution: solution,\n        currAnswer: currAnswer,\n        styles: styles,\n        handleKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-container\",\n      children: /*#__PURE__*/_jsxDEV(Riddle, {\n        solution: solution,\n        currAnswer: currAnswer,\n        styles: styles,\n        handleKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(App, \"6cMbnL8iMioabTMyj5Kdok4FL0Q=\");\n_c4 = App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"InvisibleSquare\");\n$RefreshReg$(_c3, \"Riddle\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","InvisibleSquare","_c2","getNextSquare","currAnswer","solution","i","length","getPrevSquare","nextSquare","Riddle","styles","handleKeyDown","_s","window","addEventListener","removeEventListener","squares","push","_c3","getEmptyAnswers","numberOfGuesses","answers","answer","j","getDefaultStyles","nGuesses","singleGuessStyles","Array","fill","ans","arraysAreEqual","arr1","arr2","every","element","index","getNewGameStatus","currentAnswer","App","_s2","toUpperCase","split","setAnswers","allStyles","setAllStyles","Guesses","setGuesses","currGuess","gameSatatus","setGamestatus","onEnterClicked","newStyles","slice","solutionChars","colors","currChar","indexOf","splice","backgroundColor","newAllStyles","setNewAnswer","currSquare","key","newAnswers","event","toLowerCase","_c4","$RefreshReg$"],"sources":["/Users/amirdafnai/Desktop/react-app/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Square({ value , style }) {\n  return <div className=\"square\"  style={style} >{value} </div>;\n}\n\n\nfunction InvisibleSquare() {\n  return <div className=\"invisibleSquare\"> </div>;\n}\n\nfunction getNextSquare(currAnswer, solution) {\n  // console.log(solution);\n  // console.log(currAnswer);\n\n  for (let i = 0; i < currAnswer.length; i++) {\n    if (\n      (currAnswer[i] === \"\" && solution[i] !== \" \") ||\n      i === solution.length - 1\n    )\n      return i;\n  }\n}\n\nfunction getPrevSquare(currAnswer , solution){\n  let nextSquare = getNextSquare(currAnswer ,solution)\n  if ((nextSquare === solution.length-1 && currAnswer[nextSquare] !== '') || nextSquare === 0)\n    return nextSquare\n  nextSquare--\n  if(solution[nextSquare] === ' ')\n    return nextSquare-1\n  return nextSquare\n}\n\nfunction Riddle({ solution, currAnswer, styles,  handleKeyDown }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  const squares = [];\n  for (let i = 0; i < currAnswer.length; i++) {\n\n    if (solution[i] !== \" \"){\n      squares.push(\n        <Square key={i} value={currAnswer[i]}  style={styles[i]} >\n          {\" \"}\n        </Square>\n      );\n      \n    }\n    else squares.push(<InvisibleSquare key={i}> </InvisibleSquare>);\n  }\n  return squares;\n}\n\nfunction getEmptyAnswers(solution, numberOfGuesses){\n  let answers  = [];\n  for(let i =0 ; i<numberOfGuesses; i++){\n    let answer = []\n    for(let j =0 ; j<solution.length ; j++){\n      if (solution[j] === ' ')\n        answer.push(' ')\n      else \n        answer.push('')\n    }\n    answers.push(answer)\n}\nreturn answers\n\n}\n\nfunction getDefaultStyles(solution , nGuesses){\n  const singleGuessStyles = Array(solution.length).fill({'backgroundColor' : \"white\"})\n  const ans = Array(nGuesses).fill(singleGuessStyles)\n  return ans \n}\n\nfunction arraysAreEqual(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every((element, index) => element === arr2[index]);\n}\n\nfunction getNewGameStatus(currentAnswer , solution){\n  if (arraysAreEqual(currentAnswer , solution))\n    return 'win'\n\n}\n\n\nexport default function App() {\n  const solution = \"hello man\".toUpperCase().split('');\n  const numberOfGuesses = 3\n  const [answers, setAnswers] = useState(getEmptyAnswers(solution , numberOfGuesses));\n  let [allStyles, setAllStyles] = useState(getDefaultStyles(solution))\n  const [Guesses, setGuesses] = useState([])\n  const currGuess = Guesses.length\n  const currAnswer = answers[currGuess]\n  const styles = allStyles[currGuess]\n  const [gameSatatus, setGamestatus] = useState('playing')\n  \n  function onEnterClicked(solution , currAnswer){\n    let newStyles = allStyles[currGuess].slice()\n    let solutionChars = solution.slice()\n    let colors = Array(solution.length).fill('gray')\n    for (let i = 0; i < solution.length; i++) {\n      if (solution[i] === ' ')\n        continue\n      const currChar = currAnswer[i]\n      const index = solutionChars.indexOf(currChar)\n      if (currChar === solution[i]){\n        colors[i] ='green'\n        solutionChars.splice(index, 1)\n      }\n        \n    }\n    for (let i = 0; i < solution.length; i++) {\n      if (solution[i] === ' ')\n        continue\n      const currChar = currAnswer[i]\n      const index = solutionChars.indexOf(currChar)\n      if (index!==-1 && colors[i] === 'gray'){\n        solutionChars.splice(index, 1)\n        colors[i] = 'orange'\n      }\n      for (let i = 0; i < solution.length; i++) {\n        newStyles[i] = {backgroundColor:  colors[i]}\n      }\n    let newAllStyles = allStyles.slice()\n    newAllStyles[currGuess] = newStyles\n    setAllStyles(newAllStyles)\n    }\n  }\n  \n\n  function setNewAnswer(currSquare , key){\n    // console.log('key is ' + key)\n    // console.log('currentSquare = ' + currSquare)\n    let newAnswers = answers.slice()\n    currAnswer[currSquare] = key;\n    newAnswers[currGuess] = currAnswer\n    setAnswers(newAnswers);\n    // console.log(currAnswer)\n    // console.log(newans)\n  \n  }\n\n\n  function handleKeyDown(event) {\n    if (event.key === 'Backspace')\n       setNewAnswer(getPrevSquare(currAnswer, solution), '')\n  \n    else if (\"abcdefghijklmnopqrstuvwxyz\".indexOf(event.key.toLowerCase()) !== -1) \n      setNewAnswer(getNextSquare(currAnswer, solution), event.key.toUpperCase())\n    else if (event.key === 'Enter' && currAnswer[solution.length -1] !== '')\n      onEnterClicked(solution , currAnswer)\n  }\n  \n  return (\n    <>\n      <h1> THIS IS THE DEFENITION </h1>\n      <div className='word-container'>\n      <Riddle \n        solution={solution}\n        currAnswer={currAnswer}\n        styles= {styles}\n        handleKeyDown={handleKeyDown}\n      />\n      </div>\n      <div className='word-container'>\n      <Riddle \n        solution={solution}\n        currAnswer={currAnswer}\n        styles= {styles}\n        handleKeyDown={handleKeyDown}\n      />\n      </div> \n      \n\n      \n\n      \n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAGC;AAAM,CAAC,EAAE;EACjC,oBAAOL,OAAA;IAAKM,SAAS,EAAC,QAAQ;IAAED,KAAK,EAAEA,KAAM;IAAAE,QAAA,GAAGH,KAAK,EAAC,GAAC;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC/D;AAACC,EAAA,GAFQT,MAAM;AAKf,SAASU,eAAeA,CAAA,EAAG;EACzB,oBAAOb,OAAA;IAAKM,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAAC;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACjD;AAACG,GAAA,GAFQD,eAAe;AAIxB,SAASE,aAAaA,CAACC,UAAU,EAAEC,QAAQ,EAAE;EAC3C;EACA;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,IACGF,UAAU,CAACE,CAAC,CAAC,KAAK,EAAE,IAAID,QAAQ,CAACC,CAAC,CAAC,KAAK,GAAG,IAC5CA,CAAC,KAAKD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAEzB,OAAOD,CAAC;EACZ;AACF;AAEA,SAASE,aAAaA,CAACJ,UAAU,EAAGC,QAAQ,EAAC;EAC3C,IAAII,UAAU,GAAGN,aAAa,CAACC,UAAU,EAAEC,QAAQ,CAAC;EACpD,IAAKI,UAAU,KAAKJ,QAAQ,CAACE,MAAM,GAAC,CAAC,IAAIH,UAAU,CAACK,UAAU,CAAC,KAAK,EAAE,IAAKA,UAAU,KAAK,CAAC,EACzF,OAAOA,UAAU;EACnBA,UAAU,EAAE;EACZ,IAAGJ,QAAQ,CAACI,UAAU,CAAC,KAAK,GAAG,EAC7B,OAAOA,UAAU,GAAC,CAAC;EACrB,OAAOA,UAAU;AACnB;AAEA,SAASC,MAAMA,CAAC;EAAEL,QAAQ;EAAED,UAAU;EAAEO,MAAM;EAAGC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAChE5B,SAAS,CAAC,MAAM;IACd6B,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEH,aAAa,CAAC;IACjD,OAAO,MAAME,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;EACnE,CAAC,CAAC;EACF,MAAMK,OAAO,GAAG,EAAE;EAClB,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAE1C,IAAID,QAAQ,CAACC,CAAC,CAAC,KAAK,GAAG,EAAC;MACtBW,OAAO,CAACC,IAAI,cACV9B,OAAA,CAACG,MAAM;QAASC,KAAK,EAAEY,UAAU,CAACE,CAAC,CAAE;QAAEb,KAAK,EAAEkB,MAAM,CAACL,CAAC,CAAE;QAAAX,QAAA,EACrD;MAAG,GADOW,CAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACV,CAAC;IAEH,CAAC,MACIkB,OAAO,CAACC,IAAI,cAAC9B,OAAA,CAACa,eAAe;MAAAN,QAAA,EAAS;IAAC,GAAJW,CAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC,CAAC;EACjE;EACA,OAAOkB,OAAO;AAChB;AAACJ,EAAA,CAnBQH,MAAM;AAAAS,GAAA,GAANT,MAAM;AAqBf,SAASU,eAAeA,CAACf,QAAQ,EAAEgB,eAAe,EAAC;EACjD,IAAIC,OAAO,GAAI,EAAE;EACjB,KAAI,IAAIhB,CAAC,GAAE,CAAC,EAAGA,CAAC,GAACe,eAAe,EAAEf,CAAC,EAAE,EAAC;IACpC,IAAIiB,MAAM,GAAG,EAAE;IACf,KAAI,IAAIC,CAAC,GAAE,CAAC,EAAGA,CAAC,GAACnB,QAAQ,CAACE,MAAM,EAAGiB,CAAC,EAAE,EAAC;MACrC,IAAInB,QAAQ,CAACmB,CAAC,CAAC,KAAK,GAAG,EACrBD,MAAM,CAACL,IAAI,CAAC,GAAG,CAAC,MAEhBK,MAAM,CAACL,IAAI,CAAC,EAAE,CAAC;IACnB;IACAI,OAAO,CAACJ,IAAI,CAACK,MAAM,CAAC;EACxB;EACA,OAAOD,OAAO;AAEd;AAEA,SAASG,gBAAgBA,CAACpB,QAAQ,EAAGqB,QAAQ,EAAC;EAC5C,MAAMC,iBAAiB,GAAGC,KAAK,CAACvB,QAAQ,CAACE,MAAM,CAAC,CAACsB,IAAI,CAAC;IAAC,iBAAiB,EAAG;EAAO,CAAC,CAAC;EACpF,MAAMC,GAAG,GAAGF,KAAK,CAACF,QAAQ,CAAC,CAACG,IAAI,CAACF,iBAAiB,CAAC;EACnD,OAAOG,GAAG;AACZ;AAEA,SAASC,cAAcA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAClC,OAAOD,IAAI,CAACzB,MAAM,KAAK0B,IAAI,CAAC1B,MAAM,IAAIyB,IAAI,CAACE,KAAK,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAKD,OAAO,KAAKF,IAAI,CAACG,KAAK,CAAC,CAAC;AAC/F;AAEA,SAASC,gBAAgBA,CAACC,aAAa,EAAGjC,QAAQ,EAAC;EACjD,IAAI0B,cAAc,CAACO,aAAa,EAAGjC,QAAQ,CAAC,EAC1C,OAAO,KAAK;AAEhB;AAGA,eAAe,SAASkC,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAMnC,QAAQ,GAAG,WAAW,CAACoC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC;EACpD,MAAMrB,eAAe,GAAG,CAAC;EACzB,MAAM,CAACC,OAAO,EAAEqB,UAAU,CAAC,GAAGzD,QAAQ,CAACkC,eAAe,CAACf,QAAQ,EAAGgB,eAAe,CAAC,CAAC;EACnF,IAAI,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAACuC,gBAAgB,CAACpB,QAAQ,CAAC,CAAC;EACpE,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM8D,SAAS,GAAGF,OAAO,CAACvC,MAAM;EAChC,MAAMH,UAAU,GAAGkB,OAAO,CAAC0B,SAAS,CAAC;EACrC,MAAMrC,MAAM,GAAGiC,SAAS,CAACI,SAAS,CAAC;EACnC,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAGhE,QAAQ,CAAC,SAAS,CAAC;EAExD,SAASiE,cAAcA,CAAC9C,QAAQ,EAAGD,UAAU,EAAC;IAC5C,IAAIgD,SAAS,GAAGR,SAAS,CAACI,SAAS,CAAC,CAACK,KAAK,CAAC,CAAC;IAC5C,IAAIC,aAAa,GAAGjD,QAAQ,CAACgD,KAAK,CAAC,CAAC;IACpC,IAAIE,MAAM,GAAG3B,KAAK,CAACvB,QAAQ,CAACE,MAAM,CAAC,CAACsB,IAAI,CAAC,MAAM,CAAC;IAChD,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,IAAID,QAAQ,CAACC,CAAC,CAAC,KAAK,GAAG,EACrB;MACF,MAAMkD,QAAQ,GAAGpD,UAAU,CAACE,CAAC,CAAC;MAC9B,MAAM8B,KAAK,GAAGkB,aAAa,CAACG,OAAO,CAACD,QAAQ,CAAC;MAC7C,IAAIA,QAAQ,KAAKnD,QAAQ,CAACC,CAAC,CAAC,EAAC;QAC3BiD,MAAM,CAACjD,CAAC,CAAC,GAAE,OAAO;QAClBgD,aAAa,CAACI,MAAM,CAACtB,KAAK,EAAE,CAAC,CAAC;MAChC;IAEF;IACA,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,IAAID,QAAQ,CAACC,CAAC,CAAC,KAAK,GAAG,EACrB;MACF,MAAMkD,QAAQ,GAAGpD,UAAU,CAACE,CAAC,CAAC;MAC9B,MAAM8B,KAAK,GAAGkB,aAAa,CAACG,OAAO,CAACD,QAAQ,CAAC;MAC7C,IAAIpB,KAAK,KAAG,CAAC,CAAC,IAAImB,MAAM,CAACjD,CAAC,CAAC,KAAK,MAAM,EAAC;QACrCgD,aAAa,CAACI,MAAM,CAACtB,KAAK,EAAE,CAAC,CAAC;QAC9BmB,MAAM,CAACjD,CAAC,CAAC,GAAG,QAAQ;MACtB;MACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACxC8C,SAAS,CAAC9C,CAAC,CAAC,GAAG;UAACqD,eAAe,EAAGJ,MAAM,CAACjD,CAAC;QAAC,CAAC;MAC9C;MACF,IAAIsD,YAAY,GAAGhB,SAAS,CAACS,KAAK,CAAC,CAAC;MACpCO,YAAY,CAACZ,SAAS,CAAC,GAAGI,SAAS;MACnCP,YAAY,CAACe,YAAY,CAAC;IAC1B;EACF;EAGA,SAASC,YAAYA,CAACC,UAAU,EAAGC,GAAG,EAAC;IACrC;IACA;IACA,IAAIC,UAAU,GAAG1C,OAAO,CAAC+B,KAAK,CAAC,CAAC;IAChCjD,UAAU,CAAC0D,UAAU,CAAC,GAAGC,GAAG;IAC5BC,UAAU,CAAChB,SAAS,CAAC,GAAG5C,UAAU;IAClCuC,UAAU,CAACqB,UAAU,CAAC;IACtB;IACA;EAEF;EAGA,SAASpD,aAAaA,CAACqD,KAAK,EAAE;IAC5B,IAAIA,KAAK,CAACF,GAAG,KAAK,WAAW,EAC1BF,YAAY,CAACrD,aAAa,CAACJ,UAAU,EAAEC,QAAQ,CAAC,EAAE,EAAE,CAAC,MAEnD,IAAI,4BAA4B,CAACoD,OAAO,CAACQ,KAAK,CAACF,GAAG,CAACG,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAC3EL,YAAY,CAAC1D,aAAa,CAACC,UAAU,EAAEC,QAAQ,CAAC,EAAE4D,KAAK,CAACF,GAAG,CAACtB,WAAW,CAAC,CAAC,CAAC,MACvE,IAAIwB,KAAK,CAACF,GAAG,KAAK,OAAO,IAAI3D,UAAU,CAACC,QAAQ,CAACE,MAAM,GAAE,CAAC,CAAC,KAAK,EAAE,EACrE4C,cAAc,CAAC9C,QAAQ,EAAGD,UAAU,CAAC;EACzC;EAEA,oBACEhB,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCX,OAAA;MAAKM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC/BP,OAAA,CAACsB,MAAM;QACLL,QAAQ,EAAEA,QAAS;QACnBD,UAAU,EAAEA,UAAW;QACvBO,MAAM,EAAGA,MAAO;QAChBC,aAAa,EAAEA;MAAc;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACNX,OAAA;MAAKM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC/BP,OAAA,CAACsB,MAAM;QACLL,QAAQ,EAAEA,QAAS;QACnBD,UAAU,EAAEA,UAAW;QACvBO,MAAM,EAAGA,MAAO;QAChBC,aAAa,EAAEA;MAAc;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eAMN,CAAC;AAEP;AAACyC,GAAA,CA9FuBD,GAAG;AAAA4B,GAAA,GAAH5B,GAAG;AAAA,IAAAvC,EAAA,EAAAE,GAAA,EAAAiB,GAAA,EAAAgD,GAAA;AAAAC,YAAA,CAAApE,EAAA;AAAAoE,YAAA,CAAAlE,GAAA;AAAAkE,YAAA,CAAAjD,GAAA;AAAAiD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}